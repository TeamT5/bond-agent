name: Build and Release

on:
  push:
    branches:
      - use_scss
    paths:
      - "static/scss/**"
      - "src/**"
      - "libs/config/__version__.py"
      - "package.json"
      - "package-lock.json"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm install

      - name: Install Sass
        run: npm install -g sass

      - name: Compile SCSS to CSS
        run: |
          mkdir -p static/css
          sass static/scss/index.scss static/css/index.css
          sass static/scss/exception_error.scss static/css/exception_error.css

      - name: Get project name
        id: project_name
        run: echo "PROJECT_NAME=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_ENV

      - name: Get version from __version__.py
        id: version
        run: |
          VERSION=$(grep '__version__' libs/config/__version__.py | sed -E 's/__version__ = "(.*)"/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Package project files as zip
        run: |
          zip -r ${{ env.PROJECT_NAME }}_${{ env.VERSION }}.zip ./*

      - name: Package project files as tar.gz
        run: |
          tar -czvf ${{ env.PROJECT_NAME }}_${{ env.VERSION }}.tar.gz ./*

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: release-package
          path: |
            ${{ env.PROJECT_NAME }}_${{ env.VERSION }}.zip
            ${{ env.PROJECT_NAME }}_${{ env.VERSION }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: release-package
          path: ./release

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset - ZIP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/${{ env.PROJECT_NAME }}_${{ env.VERSION }}.zip
          asset_name: ${{ env.PROJECT_NAME }}_${{ env.VERSION }}.zip
          asset_content_type: application/zip

      - name: Upload Release Asset - TAR.GZ
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/${{ env.PROJECT_NAME }}_${{ env.VERSION }}.tar.gz
          asset_name: ${{ env.PROJECT_NAME }}_${{ env.VERSION }}_${{ env.VERSION }}.tar.gz
          asset_content_type: application/gzip
