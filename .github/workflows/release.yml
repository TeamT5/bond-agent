name: Release

on:
  workflow_run:
    workflows: ["Build"]
    types:
      - completed

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: release-package
          path: release/

      - name: Get version and timestamp from environment
        id: get_version_and_timestamp
        run: |
          echo "VERSION=${{ env.VERSION }}" >> $GITHUB_ENV
          echo "NAME=${{ env.NAME }}" >> $GITHUB_ENV
          echo "TIMESTAMP=${{ env.TIMESTAMP }}" >> $GITHUB_ENV
          echo "TAG_NAME=${{ env.TAG_NAME }}" >> $GITHUB_ENV
          echo "PACKAGE_NAME=${{ env.PACKAGE_NAME }}" >> $GITHUB_ENV

      - name: Configure Git
        run: |
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git config --global user.name 'github-actions[bot]'

      - name: Create release tag
        run: |
          git tag ${{ env.TAG_NAME }}
          git push origin ${{ env.TAG_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate release notes
        id: generate_release_notes
        run: |
          echo "## Changes in this release" > release_notes.md
          echo "" >> release_notes.md
          git log --oneline $(git describe --tags --abbrev=0 HEAD^)..HEAD >> release_notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          body_path: ./release_notes.md
          draft: false
          prerelease: false

      - name: Upload Release Asset - ZIP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/artifacts/${{ env.PACKAGE_NAME }}.zip
          asset_name: ${{ env.PACKAGE_NAME }}.zip
          asset_content_type: application/zip

      - name: Upload Release Asset - TAR.GZ
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/artifacts/${{ env.PACKAGE_NAME }}.tar.gz
          asset_name: ${{ env.PACKAGE_NAME }}.tar.gz
          asset_content_type: application/gzip
